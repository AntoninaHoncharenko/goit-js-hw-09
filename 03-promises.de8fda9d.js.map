{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAWA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAlBPQ,KAAO,CACLC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAGtCH,KAAKC,KAAKM,iBAAiB,UAe3B,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOX,KAAKI,WAAWQ,OAC7BC,EAASF,OAAOX,KAAKM,YAAYM,OACjCE,EAAOH,OAAOX,KAAKK,UAAUO,OAEnC,GAAIF,EAAQ,GAAKG,GAAU,GAAKC,EAAO,EAOrC,OANA1B,EAAA2B,OAAOC,QAAQ,8BAA+B,CAC5CzB,SAAU,gBACV0B,YAAa,OACbC,cAAc,SAEhBlB,KAAKC,KAAKkB,QAIZ,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAQO,GAAK,EAC/B9B,EAAc8B,EAAI,EAAGV,GAClBW,MAAK,SAAAC,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MACjBJ,EAAA2B,OAAOQ,QAAQ,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAE9DiC,OAAM,SAAAH,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MAClBJ,EAAA2B,OAAOC,QAAQ,sBAAqCQ,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAE9DkB,GAASI,EAEXd,KAAKC,KAAKkB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nrefs = {\n  form: document.querySelector('form'),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let delay = Number(refs.delayInput.value);\n  const amount = Number(refs.amountInput.value);\n  const step = Number(refs.stepInput.value);\n\n  if (delay < 0 || amount <= 0 || step < 0) {\n    Notify.failure('Please enter positive value', {\n      position: 'center-center',\n      backOverlay: 'true',\n      clickToClose: true,\n    });\n    refs.form.reset();\n    return;\n  }\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  refs.form.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","refs","form","document","querySelector","delayInput","stepInput","amountInput","addEventListener","event","preventDefault","delay1","Number","value","amount","step","Notify","failure","backOverlay","clickToClose","reset","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.de8fda9d.js.map"}